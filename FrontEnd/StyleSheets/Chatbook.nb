Notebook[{
	Cell[StyleData[StyleDefinitions -> "Default.nb"]],

	(*==================================*)
	(* Modifications to built-in styles *)
	(*==================================*)

	(*------------------------------------*)
	(* Built-in cells with Explain button *)
	(*------------------------------------*)

	Cell[
		StyleData["Input"],
		StyleKeyMapping -> {
			"/" -> "ChatUserInput",
			"=" -> "WolframAlphaShort",
			">" -> "ExternalLanguageDefault",
			"*" -> "Item"
		},
		CellFrameLabels -> {
			{
				None,
				Cell[
					BoxData[
						ButtonBox[
							StyleBox["Explain", FontSize -> 10],
							ButtonFunction :> (
								(* FIXME: Load package. *)
								Wolfram`Chatbook`UI`ChatExplainButtonFunction[ParentCell[EvaluationCell[]]]
							),
							Evaluator -> Automatic
						]
					],
					Background -> GrayLevel[1],
					FontSize -> 10,
					FontFamily -> FrontEnd`CurrentValue["ControlsFontFamily"],
					TextAlignment -> Left,
					CellMargins -> 0,
					CellSize -> {All, 20}
				]
			},
			{None, None}
		}
	],

	Cell[
		StyleData["Output"],
		CellFrameLabels -> {
			{
				None,
				Cell[
					BoxData[
						ButtonBox[StyleBox["Explain", FontSize -> 10],
							ButtonFunction :> (
								(* FIXME: Load package. *)
								Wolfram`Chatbook`UI`ChatExplainButtonFunction[ParentCell[EvaluationCell[]]]
							),
							Evaluator -> Automatic
						]
					],
					Background -> GrayLevel[1],
					FontSize -> 10,
					FontFamily -> FrontEnd`CurrentValue["ControlsFontFamily"],
					TextAlignment -> Left, CellMargins -> 0, CellSize -> {All, 20}
				]
			},
			{None, None}
		}
	],

	Cell[
		StyleData["Print"],
		CellFrameLabels -> {
			{
				None,
				Cell[
					BoxData[
						ButtonBox[
							StyleBox["Explain", FontSize -> 10],
							ButtonFunction :> (
								(* FIXME: Load package. *)
								Wolfram`Chatbook`UI`ChatExplainButtonFunction[ParentCell[EvaluationCell[]]]
							),
							Evaluator -> Automatic
						]
					],
					Background -> GrayLevel[1],
					FontSize -> 10,
					FontFamily -> FrontEnd`CurrentValue["ControlsFontFamily"],
					TextAlignment -> Left,
					CellMargins -> 0,
					CellSize -> {All, 20}
				]
			},
			{None, None}
		}
	],

	Cell[
		StyleData["Message"],
		CellFrameLabels -> {
			{
				None,
				Cell[
					BoxData[
						ButtonBox[
							StyleBox["Explain", FontSize -> 10],
							ButtonFunction :> (
								(* FIXME: Load package. *)
								Wolfram`Chatbook`UI`ChatExplainButtonFunction[ParentCell[EvaluationCell[]]]
							),
							Evaluator -> Automatic
						]
					],
					Background -> GrayLevel[1],
					FontSize -> 10,
					FontFamily -> FrontEnd`CurrentValue["ControlsFontFamily"],
					TextAlignment -> Left,
					CellMargins -> 0,
					CellSize -> {All, 20}
				]
			},
			{None, None}
		}
	],

	(*----------------------------------------*)
	(* Built-in cells with divider parameters *)
	(*----------------------------------------*)

	Cell[
		StyleData["Section"],
		CellFrameLabels -> {
			{
				None,
				Cell[
					BoxData[
						ButtonBox[
							StyleBox["Params", FontSize -> 10],
							ButtonFunction :> (
								Wolfram`Chatbook`UI`EditChatContextSettings[ParentCell[EvaluationCell[]]]
							),
							Evaluator -> Automatic
						]
					],
					Background -> GrayLevel[1],
					FontSize -> 10,
					FontFamily -> FrontEnd`CurrentValue["ControlsFontFamily"],
					TextAlignment -> Left,
					CellMargins -> 0,
					CellSize -> {All, 20}
				]
			},
			{None, None}
		}
	],

	Cell[
		StyleData["Subsection"],
		CellFrameLabels -> {
			{
				None,
				Cell[
					BoxData[
						ButtonBox[
							StyleBox["Params", FontSize -> 10],
							Evaluator -> Automatic,
							ButtonFunction :> (
								Wolfram`Chatbook`UI`EditChatContextSettings[ParentCell[EvaluationCell[]]]
							)
						]
					],
					Background -> GrayLevel[1],
					FontSize -> 10,
					FontFamily -> FrontEnd`CurrentValue["ControlsFontFamily"],
					TextAlignment -> Left,
					CellMargins -> 0,
					CellSize -> {All, 20}
				]
			},
			{None, None}
		}
	],

	Cell[
		StyleData["Subsubsection"],
		CellFrameLabels -> {
			{
				None,
				Cell[
					BoxData[
						ButtonBox[
							StyleBox["Params", FontSize -> 10],
							Evaluator -> Automatic,
							ButtonFunction :> (
								Wolfram`Chatbook`UI`EditChatContextSettings[ParentCell[EvaluationCell[]]]
							)
						]
					],
					Background -> GrayLevel[1],
					FontSize -> 10,
					FontFamily -> FrontEnd`CurrentValue["ControlsFontFamily"],
					TextAlignment -> Left,
					CellMargins -> 0,
					CellSize -> {All, 20}
				]
			},
			{None, None}
		}
	],

	(*================================*)
	(* Chat Assistant Output Styles   *)
	(*================================*)

	Cell[
		StyleData["ChatAssistantOutput", StyleDefinitions -> StyleData["Input"]],
		CellEditDuplicate -> True,
		CellGroupingRules -> "OutputGrouping",
		CellFrame->{{2, False}, {False, False}},
		CellFrameStyle -> Dashing[{Small, Small}],
		CellFrameColor->RGBColor[1, 0.7, 0.1]
	],

	Cell[
		StyleData["ChatAssistantText", StyleDefinitions -> StyleData["Text"]],
		CellGroupingRules -> "OutputGrouping",
		CellFrame->{{2, False}, {False, False}},
		CellFrameStyle -> Dashing[{Small, Small}],
		CellFrameColor->RGBColor[1, 0.7, 0.1]
	],

	Cell[
		StyleData["ChatAssistantProgram", StyleDefinitions -> StyleData["Program"]],
		CellGroupingRules -> "OutputGrouping",
		CellFrame->{{2, False}, {False, False}},
		CellFrameStyle -> Dashing[{Small, Small}],
		CellFrameColor->RGBColor[1, 0.7, 0.1]
	],

	Cell[
		StyleData["ChatAssistantExternalLanguage", StyleDefinitions -> StyleData["ExternalLanguage"]],
		CellGroupingRules -> "OutputGrouping",
		CellFrame->{{2, False}, {False, False}},
		CellFrameStyle -> Dashing[{Small, Small}],
		CellFrameColor->RGBColor[1, 0.7, 0.1]
	],

	(*================================*)
	(* Chat Input Cell Styles         *)
	(*================================*)

	Cell[
		StyleData[
			"ChatUserInput",
			StyleDefinitions -> StyleData["ChatInputBase"]
		],
		StyleKeyMapping -> {
			"Backspace" -> "Input",
			"/" -> "ChatSystemInput",
			" " -> "Text",
			"*" -> "Item"
		},
		BackgroundAppearance -> FrontEnd`FileName[{"WolframAlphaClient"}, "NLInputQuery.9.png"],
		CellDingbat -> PaneBox[
			(* "\[FreeformPrompt]", *)
			(* Robot emoji *)
			StyleBox["\"\|01F916\"", FontSize -> 20],
			BaselinePosition -> Dynamic[
				FEPrivate`If[FEPrivate`Greater[FEPrivate`$VersionNumber, 12.],
					Center -> Center,
					Center -> Baseline
				]
			],
			BaseStyle -> {
				FontSize -> 10,
				FontColor -> RGBColor[0.949219, 0.4375, 0.128906],
				FontFamily -> Dynamic[CurrentValue[{StyleHints, "CodeFont"}]]
			}
		]
	],

	Cell[
		StyleData[
			"ChatSystemInput",
			StyleDefinitions -> StyleData["ChatInputBase"]
		],
		StyleKeyMapping -> {
			"Backspace" -> "ChatUserInput",
			"/" -> "ChatContextDivider"
		},
		BackgroundAppearance -> FrontEnd`FileName[{"WolframAlphaClient"}, "NLInputQuery.9.png"],
		CellDingbat -> PaneBox[
			(* Gear emoji *)
			StyleBox["\"\|002699\|00fe0f\"", FontSize -> 20],
			BaselinePosition -> Dynamic[
				FEPrivate`If[FEPrivate`Greater[FEPrivate`$VersionNumber, 12.],
					Center -> Center,
					Center -> Baseline
				]
			],
			BaseStyle -> {
				FontSize -> 10,
				FontColor -> RGBColor[0.949219, 0.4375, 0.128906],
				FontFamily -> Dynamic[CurrentValue[{StyleHints, "CodeFont"}]]
			}
		]
	],

	Cell[
		StyleData[
			"ChatContextDivider",
			StyleDefinitions -> StyleData["Text"]
		],
		StyleKeyMapping -> {
			"Backspace" -> "ChatSystemInput"
		},
		CellFrameLabels -> {
			{
				None,
				Cell[
					BoxData[
						ButtonBox[
							StyleBox["Params", FontSize -> 10],
							Evaluator -> Automatic
							ButtonFunction :> (
								(* FIXME: Load package. *)
								Wolfram`Chatbook`UI`EditChatContextSettings[ParentCell[EvaluationCell[]]]
							),
						]
					],
					Background -> GrayLevel[1],
					FontSize -> 10,
					FontFamily -> FrontEnd`CurrentValue["ControlsFontFamily"],
					TextAlignment -> Left,
					CellMargins -> 0,
					CellSize -> {All, 20}
				]
			},
			{
				None,
				StyleBox[
					"Restart Chat Context",
					FontSize -> 20,
					FontFamily -> "Ariel",
					FontColor -> RGBColor[0.96669, 0.406104, 0.0365759]
				]
			}
		},
		Deployed -> True,
		CellSize -> {Automatic,0},
		Selectable -> False,
		Editable -> False,
		CellFrame -> {{0, 0}, {0, 6}},
		CellFrameStyle -> RGBColor[0.96669, 0.406104, 0.0365759]
	],

	(* Deprecated cell styles. ChatGPTInput was replaced with ChatGPTUserInput and then with ChatUserInput. *)
	Cell[
		StyleData[
			"ChatGPTInput",
			StyleDefinitions -> StyleData["ChatUserInput"]
		]
	],
	Cell[
		StyleData[
			"ChatGPTUserInput",
			StyleDefinitions -> StyleData["ChatUserInput"]
		]
	],
	Cell[
		StyleData[
			"ChatGPTSystemInput",
			StyleDefinitions -> StyleData["ChatSystemInput"]
		]
	],

	(*--------------------------------*)
	(* Input base style               *)
	(*--------------------------------*)

	Cell[
		StyleData["ChatInputBase", StyleDefinitions -> StyleData["Input"]],
		CellMargins -> {{66, 21}, {5, 10}},
		CellDingbatMargin -> -25,
		CellEvaluationFunction :> (
			(*
				Don't put this context on $ContextPath. Any symbols from Chatbook
				used in UI functions should be refered to by absolute context.
			*)
			Needs["Wolfram`Chatbook`UI`" -> None];

			Wolfram`Chatbook`UI`ChatInputCellEvaluationFunction
		),
		ShowCellLabel -> False,
		CellFrameMargins -> {{27, 8}, {3, 6}},
		CellFrameColor -> RGBColor[1, 0.5, 0],
		CellFrameLabelMargins -> Dynamic[
			FEPrivate`If[
				FEPrivate`Greater[FEPrivate`$VersionNumber, 12.],
				6, 1
			]
		],
		CellFrameLabels -> {
			{
				None,
				Cell[
					BoxData[
						ButtonBox[
							StyleBox["\[VerticalEllipsis]", FontSize -> 14, FontWeight->Bold],
							Evaluator -> Automatic
							ButtonFunction :> (
								(* FIXME: Load package. *)
								Wolfram`Chatbook`UI`EditChatSettingsForCell[ParentCell[EvaluationCell[]]]
							),
						]
					],
					Background -> GrayLevel[1],
					FontSize -> 10,
					FontFamily -> FrontEnd`CurrentValue["ControlsFontFamily"],
					TextAlignment -> Left,
					CellMargins -> 0,
					CellSize -> {All, 20}
				]
			},
			{
				None,
				StyleBox[
					"Restart Chat Context",
					FontSize -> 20,
					FontFamily -> "Ariel",
					FontColor -> RGBColor[0.96669, 0.406104, 0.0365759]
				]
			}
		},
		DefaultFormatType -> TextForm,
		ShowAutoStyles -> False,
		ShowCodeAssist -> False,
		ShowAutoSpellCheck -> False,
		AllowInlineCells -> False,
		FormatType -> TextForm,
		ShowStringCharacters -> False,
		FontFamily -> "Helvetica",
		FontSize -> 14,
		FontWeight -> "Plain",
		PrivateFontOptions -> {
			"OperatorSubstitution" -> True
		}
	]
}]
