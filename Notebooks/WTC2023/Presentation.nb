(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* Created By: SaveReadableNotebook *)
(* https://resources.wolframcloud.com/FunctionRepository/resources/SaveReadableNotebook *)

Notebook[
 {
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      "FirstSlide",
      CellMargins -> {{0, 0}, {-1, 0}},
      CellTags -> "SlideShowHeader"
     ],
     Cell["Advanced Chat Notebook Use", "Title"],
     Cell["Richard Hennigan, Wolfram Research", "Subtitle"],
     Cell[
      TextData[
       {
        "\n",
        Cell[
         BoxData[
          RowBox[
           {
            AdjustmentBox[
             TemplateBox[
              {
               GraphicsBox[
                {
                 {
                  GrayLevel[1],
                  FilledCurveBox[
                   {
                    {
                     {0, 2, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3}
                    },
                    {
                     {1, 4, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0}
                    }
                   },
                   CompressedData[
                    "\n1:eJxTTMoPSmVmYGBgAmJBKJ3BkN/I8lTVIVMpp6LqqLrDC/lL+fHsH+1h/Alx\nmqcFjj+A8xm+lT6YI7jVPreiaqnOYzU4P/KU0ZGN51Th/BvaqZKPIj7Yw/gP\n3syz0blyzx5mHsO9rS01Fxbbw+yD8WHugfFr1m1Lqv+pBue/PmCp7HVb3QFm\nHowPsw/Gh7kHxoe5F2YezD/o/kflqznYVkasMM1Vg/Mh5qk56DnLvH4UhuCj\n2qeG5h41hwKQvN4Le5h5D2K9T7DbPoT7F8aHhQeMX6D9bfrdyS/h/AP7+OYY\nL3pkDzMPxofZB+PD3APjw9wLMw/mH9T4VsPwPwBKz/oj\n          "
                   ]
                  ]
                 },
                 {
                  Thickness[0.0833333],
                  FaceForm[{RGBColor[1.0, 1.0, 1.0], Opacity[1.0]}],
                  FilledCurveBox[
                   {
                    {
                     {1, 4, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {1, 3, 3}
                    }
                   },
                   CompressedData[
                    "\n1:eJxTTMoPSmVmYGBgBGIvIGYC4uZAz7kNz5Qcpv+fUPf7l4LDaaMjG/XWKTsI\nidgfu1Oq6HCVM0Mpx0LF4RRIXE/JYdE1k/cWrSoOC0E0qzJc/baWmgubZyo5\nwMx7uX0983MfJYd1N+LL/OWU4Pph5jZB1a1ZC1TQr+CQt5hxD2uQsoP+f8W/\n377KwfkqGnU9O1/LwPkR0Rv3v5GThpjzVcnhhezyFx7rJB2ivu681WWr5FD+\nYI7gUlsJiPtaFR32HRRXC24Vd7AuONdxaZ4CnJ/D+XNBurE8nH8pP5793Ew5\nh7tuzBXcS8QdwsH2yDn8Of3u5OFD4g53wOKyUHlBh99gcVmHjKvPs7S/cTj4\ny4ll+RorONQ16/ss42J0cHUv+sm/UslBosfrFYvJf3uwP/mVHFb4OQgnHv5r\nDw6nNEU4HxxeZxTgfD1oOOzqZfsg5sEIDwceN9VSplmsDlNSO5JjY6Sh9jM5\nbH5VvFW0WtrBoTJihelZBgf+KrPVdtel4eZ19T35JB8kA+fvBftbyqEt6vKe\nxyIMDhD7JBw2bEuqv2nLBA+XG0KfHM+nsUDDSwzqHnao/aIOErInn9ov4XKw\nuHY014RB1OHRy6mbeAo5HaQCb0nXPBSBmscBDS8RqPvY4HyYf2B8MbB5LHD+\nLA7peXGaLHDzJhmW6yrKszqsFL7gcqNAGG4eJL6EHJbd38c3x5jToWG7Q9Mj\nd0EHj4A/EsXXuR0g/hdw0DktcHzXDj4HuS85YbXr+B1UweEq4LCm+3YGQz6/\nA1N+I8vRfh6HM9Z+FyfGcEP5bA5LoObC4hPG3/On/cvt67/h/Ihpin2lhT/h\n/CcR4tsvMvywh5jPCbWfySFIfUHnhocsDrfA4cvloAUVX2Cjc2VWmiCcfxmc\nLkXh/FVgf0vC9T8Hp38ZuPvA+ZNVweHb9LuT21t5ofkXlg8EHWRfPzKTYlCC\npmcRh+tA5a7HlaDhLe5wIFrB8aOyMjQ+peF8SHzLwfmQ8JR34LCdHTr/tTI8\n/cPKh4qqpTrOdxSg9qk6GM7Ukpg6RdHhS19wiUq4ikPKmVjvE+6KkPJhHrT8\nkFR0QC+PAPZc+cE=\n          "
                   ]
                  ]
                 }
                },
                {
                 ImageSize ->
                  0.027 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]
                }
               ],
               TemplateBox[{6}, "Spacer1"],
               GraphicsBox[
                {
                 {
                  GrayLevel[1],
                  FilledCurveBox[
                   {
                    {
                     {0, 2, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3}
                    },
                    {
                     {1, 4, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0}
                    }
                   },
                   CompressedData[
                    "\n1:eJxTTMoPSmVmYGBgAmJBKJ3BkN/I8lTVIVMpp6LqqLrDC/lL+fHsH+1h/Alx\nmqcFjj+A8xm+lT6YI7jVPreiaqnOYzU4P/KU0ZGN51Th/BvaqZKPIj7Yw/gP\n3syz0blyzx5mHsO9rS01Fxbbw+yD8WHugfFr1m1Lqv+pBue/PmCp7HVb3QFm\nHowPsw/Gh7kHxoe5F2YezD/o/kflqznYVkasMM1Vg/Mh5qk56DnLvH4UhuCj\n2qeG5h41hwKQvN4Le5h5D2K9T7DbPoT7F8aHhQeMX6D9bfrdyS/h/AP7+OYY\nL3pkDzMPxofZB+PD3APjw9wLMw/mH9T4VsPwPwBKz/oj\n          "
                   ]
                  ]
                 },
                 {
                  Thickness[0.0833333],
                  FaceForm[{RGBColor[1.0, 1.0, 1.0], Opacity[1.0]}],
                  FilledCurveBox[
                   {
                    {
                     {0, 2, 0},
                     {0, 1, 0},
                     {0, 1, 0},
                     {0, 1, 0},
                     {0, 1, 0},
                     {0, 1, 0},
                     {0, 1, 0},
                     {0, 1, 0},
                     {0, 1, 0},
                     {0, 1, 0},
                     {1, 3, 3},
                     {1, 3, 3},
                     {0, 1, 0},
                     {0, 1, 0},
                     {0, 1, 0},
                     {1, 3, 3}
                    }
                   },
                   CompressedData[
                    "\n1:eJxTTMoPSmVmYGBgBGJxIGYC4ksM95g4uaQc9P8r/v32VdohkyG/kYVVAQdf\n1AFVPYLfFnV5z2MRBihfBIMPU7+EcQ+rkAgPDr40mnoEf8ur4q2i1XJwfq/G\nW959BQoOXfLJ76IOQfkfFB1+x+Qe/Wck5pByJtb7xHElqLy4w5q1N+LL+pUd\nwt/o71bvl3SY8X9C3e9fyg7zz646f/WaNJwP8y92vgKaepj9UnA+LDysC851\nXJqH4BvO1JKYKqLgAAA6xp7+\n          "
                   ]
                  ]
                 }
                },
                {
                 ImageSize ->
                  0.027 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]
                }
               ],
               TemplateBox[{6}, "Spacer1"],
               GraphicsBox[
                {
                 Thickness[0.0833333],
                 FaceForm[{RGBColor[1.0, 1.0, 1.0], Opacity[1.0]}],
                 FilledCurveBox[
                  {
                   {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}},
                   {
                    {0, 2, 0},
                    {0, 1, 0},
                    {1, 3, 3},
                    {1, 3, 3},
                    {0, 1, 0},
                    {0, 1, 0},
                    {0, 1, 0},
                    {0, 1, 0},
                    {0, 1, 0},
                    {0, 1, 0},
                    {1, 3, 3},
                    {1, 3, 3},
                    {1, 3, 3}
                   },
                   {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}
                  },
                  {
                   {
                    {4.02, 8.7598},
                    {4.02, 8.3398},
                    {3.69, 8.0098},
                    {3.24, 8.0098},
                    {2.79, 8.0098},
                    {2.49, 8.3398},
                    {2.49, 8.7598},
                    {2.49, 9.1798},
                    {2.82, 9.5098},
                    {3.24, 9.5098},
                    {3.66, 9.5098},
                    {4.02, 9.1498},
                    {4.02, 8.7598}
                   },
                   CompressedData[
                    "\n1:eJxTTMoPSmViYGCQAGIQ3fo6cIccq7JD1VIdZ5nXzA4QvgIGP2dW+ZxFi0Xg\nfF/RHq9XLeIO3zRi+g99lXOYf3bV+avXJBy4ri8usOWShfOrRNa5P6yShvNb\nQPpbpRyerVN90iwHUy/lEP5Gf7d6vxicD7MfwhfB4J/QtJp0+r+sA9AwoIkS\ncD7YOhFJh0sM95g4geYYgwGCnwYGUg77gqYp9n2VdgAaBjRRxkFvwoIfhmkw\n/fJwPtBzQB8qwPkQ/YoOU76xxc84IwOR51dyUNn5p/1LtLQDODhWKDlsrv60\nIeC1pAMsfCHuE4fz2UwEzWxsRR0AMJ+b7g==\n          "
                   ],
                   {
                    {3.99, 2.4898},
                    {2.49, 2.4898},
                    {2.49, 7.4998},
                    {3.99, 7.4998}
                   }
                  }
                 ],
                 FilledCurveBox[
                  {
                   {
                    {0, 2, 0},
                    {1, 3, 3},
                    {0, 1, 0},
                    {1, 3, 3},
                    {0, 1, 0},
                    {1, 3, 3},
                    {0, 1, 0},
                    {1, 3, 3}
                   },
                   {
                    {1, 4, 3},
                    {0, 1, 0},
                    {1, 3, 3},
                    {0, 1, 0},
                    {1, 3, 3},
                    {0, 1, 0},
                    {1, 3, 3},
                    {0, 1, 0}
                   }
                  },
                  CompressedData[
                   "\n1:eJxTTMoPSmVmYGBgAmJBKJ3BkN/I8lTVIVMpp6LqqLrDC/lL+fHsH+1h/Alx\nmqcFjj+A8xm+lT6YI7jVPreiaqnOYzU4P/KU0ZGN51Th/BvaqZKPIj7Yw/gP\n3syz0blyzx5mHsO9rS01Fxbbw+yD8WHugfFr1m1Lqv+pBue/PmCp7HVb3QFm\nHowPsw/Gh7kHxoe5F2YezD/o/kflqznYVkasMM1Vg/Mh5qk56DnLvH4UhuCj\n2qeG5h41hwKQvN4Le5h5D2K9T7DbPoT7F8aHhQeMX6D9bfrdyS/h/AP7+OYY\nL3pkDzMPxofZB+PD3APjw9wLMw/mH9T4VsPwPwBKz/oj\n         "
                  ]
                 ]
                },
                {
                 AspectRatio -> Automatic,
                 ImageSize ->
                  0.027 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}],
                 PlotRange -> {{0.0, 12.0}, {0.0, 12.0}}
                }
               ]
              },
              "RowDefault"
             ],
             BoxBaselineShift -> -0.341654,
             BoxMargins -> {{0.0, 0.0}, {0.341654, -0.341654}}
            ],
            " "
           }
          ]
         ]
        ],
        " #WolframTechConf"
       }
      ],
      "Subtitle",
      CellMargins -> {{0, 0}, {20, -10}},
      FontSize ->
       0.025 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "ABSTRACT",
         "Section",
         GeneratedCell -> False,
         CellAutoOverwrite -> False
        ],
        Cell[
         "This presentation discusses advanced usage of Wolfram Language\[CloseCurlyQuote]s chat notebooks, including creating and programming chat notebooks, and developing new custom chat notebook behavior. It provides a hands-on approach with real code examples and tips for using chat notebook features effectively.",
         "Text",
         GeneratedCell -> False,
         CellAutoOverwrite -> False,
         InputFieldBoxOptions -> {FieldCompletionFunction -> None}
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Topics",
         "Section",
         GeneratedCell -> False,
         CellAutoOverwrite -> False
        ],
        Cell["Creating chat notebooks", "Item"],
        Cell["Chat notebook programming", "Item"],
        Cell["LLM tools", "Item"],
        Cell["Event-driven handler functions", "Item"],
        Cell["Customizing chat notebook behavior", "Item"]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      BoxData[
       {
        RowBox[
         {
          RowBox[
           {"Get", "[", " ", "\"Wolfram`Chatbook`\"", " ", "]"}
          ],
          ";"
         }
        ],
        "\n",
        RowBox[
         {
          RowBox[
           {
            RowBox[
             {"CurrentChatSettings", "[", " ", "\"Model\"", " ", "]"}
            ],
            "=."
           }
          ],
          ";"
         }
        ],
        "\n",
        RowBox[
         {
          RowBox[
           {
            RowBox[
             {
              RowBox[
               {
                "SetOptions",
                "[",
                " ",
                RowBox[
                 {
                  "#1",
                  ",",
                  " ",
                  RowBox[{"CellLabel", " ", "->", " ", "Inherited"}]
                 }
                ],
                " ",
                "]"
               }
              ],
              " ",
              "&"
             }
            ],
            " ",
            "/@",
            " ",
            RowBox[{"Cells", "[", " ", "]"}]
           }
          ],
          ";"
         }
        ],
        "\n",
        RowBox[{RowBox[{"$Line", " ", "=", " ", "0"}], ";"}]
       }
      ],
      "Code",
      CellOpen -> False
     ],
     Cell[
      CellGroupData[
       {
        Cell["Creating chat notebooks", "Section"],
        Cell["Create a new chat notebook:", "CodeText"],
        Cell[
         BoxData[RowBox[{"CreateChatNotebook", "[", "]"}]],
         "Input"
        ],
        Cell[
         BoxData[RowBox[{"CreateChatDrivenNotebook", "[", "]"}]],
         "Input"
        ],
        Cell["Specify initial content:", "CodeText"],
        Cell[
         BoxData[
          RowBox[
           {
            "CreateChatNotebook",
            "[",
            RowBox[
             {
              "{",
              RowBox[
               {
                RowBox[
                 {
                  "Cell",
                  "[",
                  RowBox[{"\"Test notebook\"", ",", "\"Title\""}],
                  "]"
                 }
                ],
                ",",
                RowBox[
                 {
                  "Cell",
                  "[",
                  RowBox[{"\"Please ignore\"", ",", "\"Text\""}],
                  "]"
                 }
                ],
                ",",
                RowBox[
                 {
                  "Cell",
                  "[",
                  RowBox[{"\"Hello\"", ",", "\"ChatInput\""}],
                  "]"
                 }
                ]
               }
              ],
              "}"
             }
            ],
            "]"
           }
          ]
         ],
         "Input"
        ],
        Cell["Convert an existing notebook:", "CodeText"],
        Cell[
         BoxData[
          RowBox[
           {
            RowBox[
             {
              "nbo",
              "=",
              RowBox[
               {
                "NotebookOpen",
                "[",
                RowBox[
                 {"FindFile", "[", "\"ExampleData/document.nb\"", "]"}
                ],
                "]"
               }
              ]
             }
            ],
            ";"
           }
          ]
         ],
         "Input"
        ],
        Cell[
         BoxData[RowBox[{"CreateChatNotebook", "[", "nbo", "]"}]],
         "Input"
        ],
        Cell[
         CellGroupData[
          {
           Cell["Options", "Subsection"],
           Cell[
            BoxData[
             RowBox[{"Options", "[", "CreateChatNotebook", "]"}]
            ],
            "Input"
           ],
           Cell[
            CellGroupData[
             {
              Cell["Some examples", "Subsubsection"],
              Cell[
               BoxData[
                RowBox[
                 {
                  "CreateChatNotebook",
                  "[",
                  RowBox[{"\"Assistance\"", "->", "True"}],
                  "]"
                 }
                ]
               ],
               "Input"
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  "CreateChatNotebook",
                  "[",
                  RowBox[{"\"InitialChatCell\"", "\[Rule]", "False"}],
                  "]"
                 }
                ]
               ],
               "Input"
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  "CreateChatNotebook",
                  "[",
                  RowBox[
                   {
                    "\"Model\"",
                    "->",
                    RowBox[
                     {"{", RowBox[{"\"Anthropic\"", ",", "\"claude-2\""}], "}"}
                    ]
                   }
                  ],
                  "]"
                 }
                ]
               ],
               "Input"
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  "CreateChatNotebook",
                  "[",
                  "\[IndentingNewLine]",
                  RowBox[
                   {
                    RowBox[
                     {
                      "Table",
                      "[",
                      RowBox[
                       {
                        RowBox[
                         {
                          "Cell",
                          "[",
                          RowBox[{"\"Hello\"", ",", "\"ChatInput\""}],
                          "]"
                         }
                        ],
                        ",",
                        "5"
                       }
                      ],
                      "]"
                     }
                    ],
                    ",",
                    "\[IndentingNewLine]",
                    RowBox[{"\"IncludeHistory\"", "\[Rule]", "False"}],
                    ",",
                    "\[IndentingNewLine]",
                    RowBox[{"\"Model\"", "->", "\"gpt-3.5-turbo\""}]
                   }
                  ],
                  "\[IndentingNewLine]",
                  "]"
                 }
                ]
               ],
               "Input"
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  "CreateChatNotebook",
                  "[",
                  "\[IndentingNewLine]",
                  RowBox[
                   {
                    RowBox[{"\"LLMEvaluator\"", "\[Rule]", "\"Birdnardo\""}],
                    ",",
                    "\[IndentingNewLine]",
                    RowBox[{"\"Model\"", "->", "\"gpt-3.5-turbo\""}]
                   }
                  ],
                  "\[IndentingNewLine]",
                  "]"
                 }
                ]
               ],
               "Input"
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  "CreateChatNotebook",
                  "[",
                  "\[IndentingNewLine]",
                  RowBox[
                   {
                    RowBox[
                     {
                      "\"LLMEvaluator\"",
                      "\[Rule]",
                      RowBox[
                       {
                        "<|",
                        "\[IndentingNewLine]",
                        RowBox[
                         {
                          RowBox[{"\"Name\"", "->", "\"MyLLMEvaluator\""}],
                          ",",
                          "\[IndentingNewLine]",
                          RowBox[
                           {
                            "\"Prompts\"",
                            "->",
                            RowBox[{"{", "\"Test persona, please ignore\"", "}"}]
                           }
                          ],
                          ",",
                          "\[IndentingNewLine]",
                          RowBox[
                           {
                            "\"Icon\"",
                            "->",
                            RowBox[
                             {
                              "Style",
                              "[",
                              RowBox[
                               {
                                "\"\[WolframLanguageLogoCircle]\"",
                                ",",
                                "Red",
                                ",",
                                "Large"
                               }
                              ],
                              "]"
                             }
                            ]
                           }
                          ]
                         }
                        ],
                        "\[IndentingNewLine]",
                        "|>"
                       }
                      ]
                     }
                    ],
                    ",",
                    "\[IndentingNewLine]",
                    RowBox[{"\"Model\"", "->", "\"gpt-3.5-turbo\""}]
                   }
                  ],
                  "\[IndentingNewLine]",
                  "]"
                 }
                ]
               ],
               "Input"
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["Chat notebook programming", "Section"],
        Cell[
         TextData[
          {
           Cell[BoxData["ChatCellEvaluate"], "InlineCode"],
           "\[LongDash]programmatically evaluate a cell as chat input"
          }
         ],
         "Item"
        ],
        Cell[
         TextData[
          {
           Cell[BoxData["CurrentChatSettings"], "InlineCode"],
           "\[LongDash]get or set chat-related settings for a particular scope"
          }
         ],
         "Item"
        ],
        Cell[
         TextData[
          {
           Cell[BoxData["ChatbookAction"], "InlineCode"],
           "\[LongDash]execute chat notebook UI actions programmatically"
          }
         ],
         "Item"
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["Chat notebook programming", "Section"],
        Cell[
         CellGroupData[
          {
           Cell["ChatCellEvaluate", "Subsection"],
           Cell["Programmatically evaluate a chat input:", "CodeText"],
           Cell[
            BoxData[
             RowBox[
              {
               "nbo",
               "=",
               RowBox[
                {
                 "CreateChatNotebook",
                 "[",
                 RowBox[
                  {
                   RowBox[
                    {
                     "{",
                     RowBox[
                      {
                       "Cell",
                       "[",
                       RowBox[{"\"Hello\"", ",", "\"ChatInput\""}],
                       "]"
                      }
                     ],
                     "}"
                    }
                   ],
                   ",",
                   RowBox[{"\"Model\"", "->", "\"gpt-3.5-turbo\""}]
                  }
                 ],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "cell",
               "=",
               RowBox[
                {"First", "[", RowBox[{"Cells", "[", "nbo", "]"}], "]"}
               ]
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[RowBox[{"ChatCellEvaluate", "[", "cell", "]"}]],
            "Input"
           ],
           Cell[
            "The cell need not have the \[OpenCurlyDoubleQuote]ChatInput\[CloseCurlyDoubleQuote] style:",
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "NotebookWrite",
               "[",
               RowBox[
                {
                 "nbo",
                 ",",
                 RowBox[
                  {
                   "Cell",
                   "[",
                   RowBox[{"\"Tell me a joke\"", ",", "\"Text\""}],
                   "]"
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "cell",
               "=",
               RowBox[
                {"Last", "[", RowBox[{"Cells", "[", "nbo", "]"}], "]"}
               ]
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[RowBox[{"ChatCellEvaluate", "[", "cell", "]"}]],
            "Input"
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["Chat notebook programming", "Section"],
        Cell[
         CellGroupData[
          {
           Cell["CurrentChatSettings", "Subsection"],
           Cell[
            BoxData[RowBox[{"CurrentChatSettings", "[", "]"}]],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[{"CurrentChatSettings", "[", "\"Model\"", "]"}]
            ],
            "Input"
           ],
           Cell["Specify scope:", "CodeText"],
           Cell[
            BoxData[
             RowBox[
              {
               "nbo",
               "=",
               RowBox[
                {
                 "CreateChatNotebook",
                 "[",
                 RowBox[{"\"Model\"", "->", "\"gpt-4\""}],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "CurrentChatSettings",
               "[",
               RowBox[{"nbo", ",", "\"Model\""}],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            "Settings specified by delimiters are reflected in output:",
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 RowBox[
                  {
                   "CurrentChatSettings",
                   "[",
                   RowBox[{"#", ",", "\"Model\""}],
                   "]"
                  }
                 ],
                 "&"
                }
               ],
               "/@",
               RowBox[
                {
                 "Cells",
                 "[",
                 RowBox[
                  {"nbo", ",", RowBox[{"CellStyle", "->", "\"ChatInput\""}]}
                 ],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input"
           ],
           Cell[
            TextData[
             {
              "Default scope is ",
              Cell[BoxData["$FrontEnd"], "InlineCode"],
              ":"
             }
            ],
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[{"CurrentChatSettings", "[", "]"}],
               "===",
               RowBox[{"CurrentChatSettings", "[", "$FrontEnd", "]"}]
              }
             ]
            ],
            "Input"
           ],
           Cell["Modify settings:", "CodeText"],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 "CurrentChatSettings",
                 "[",
                 RowBox[{"nbo", ",", "\"Model\""}],
                 "]"
                }
               ],
               "=",
               "\"gpt-3.5-turbo\""
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 RowBox[
                  {
                   "CurrentChatSettings",
                   "[",
                   RowBox[{"#", ",", "\"Model\""}],
                   "]"
                  }
                 ],
                 "&"
                }
               ],
               "/@",
               RowBox[
                {
                 "Cells",
                 "[",
                 RowBox[
                  {"nbo", ",", RowBox[{"CellStyle", "->", "\"ChatInput\""}]}
                 ],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input"
           ],
           Cell["Update global preferences persistently:", "CodeText"],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[{"CurrentChatSettings", "[", "\"Model\"", "]"}],
               "=",
               "\"gpt-3.5-turbo\""
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[{"CurrentChatSettings", "[", "\"Assistance\"", "]"}],
               "=",
               "True"
              }
             ]
            ],
            "Input"
           ],
           Cell["Restore default values:", "CodeText"],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[{"CurrentChatSettings", "[", "\"Model\"", "]"}],
               "=."
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[{"CurrentChatSettings", "[", "\"Assistance\"", "]"}],
               "=."
              }
             ]
            ],
            "Input"
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["Chat notebook programming", "Section"],
        Cell[
         CellGroupData[
          {
           Cell["ChatbookAction", "Subsection"],
           Cell[
            "Provides programmatic access to many of the UI actions in chat notebooks.",
            "Text"
           ],
           Cell[
            BoxData[
             {
              RowBox[
               {
                RowBox[
                 {
                  "nbo",
                  "=",
                  RowBox[
                   {
                    "CreateChatNotebook",
                    "[",
                    RowBox[
                     {
                      "{",
                      RowBox[
                       {
                        "Cell",
                        "[",
                        RowBox[{"\"Hello\"", ",", "\"ChatInput\""}],
                        "]"
                       }
                      ],
                      "}"
                     }
                    ],
                    "]"
                   }
                  ]
                 }
                ],
                ";"
               }
              ],
              "\[IndentingNewLine]",
              RowBox[
               {
                RowBox[
                 {
                  "NotebookEvaluate",
                  "[",
                  RowBox[
                   {"nbo", ",", RowBox[{"InsertResults", "->", "True"}]}
                  ],
                  "]"
                 }
                ],
                ";"
               }
              ]
             }
            ],
            "Input"
           ],
           Cell[
            "Execute the \[OpenCurlyDoubleQuote]Copy chat object\[CloseCurlyDoubleQuote] menu item for chat output cells:",
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "ChatbookAction",
               "[",
               RowBox[
                {
                 "\"CopyChatObject\"",
                 ",",
                 RowBox[
                  {"Last", "[", RowBox[{"Cells", "[", "nbo", "]"}], "]"}
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[BoxData[RowBox[{"Paste", "[", "]"}]], "Input"],
           Cell["Generate some tabbed outputs:", "CodeText"],
           Cell[
            BoxData[
             {
              RowBox[
               {
                RowBox[
                 {
                  "NotebookEvaluate",
                  "[",
                  RowBox[
                   {"nbo", ",", RowBox[{"InsertResults", "->", "True"}]}
                  ],
                  "]"
                 }
                ],
                ";"
               }
              ],
              "\[IndentingNewLine]",
              RowBox[
               {
                RowBox[
                 {
                  "NotebookEvaluate",
                  "[",
                  RowBox[
                   {"nbo", ",", RowBox[{"InsertResults", "->", "True"}]}
                  ],
                  "]"
                 }
                ],
                ";"
               }
              ]
             }
            ],
            "Input"
           ],
           Cell["Page through the previous outputs:", "CodeText"],
           Cell[
            BoxData[
             RowBox[
              {
               "ChatbookAction",
               "[",
               RowBox[
                {
                 "\"TabRight\"",
                 ",",
                 RowBox[
                  {"Last", "[", RowBox[{"Cells", "[", "nbo", "]"}], "]"}
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "ChatbookAction",
               "[",
               RowBox[
                {
                 "\"TabLeft\"",
                 ",",
                 RowBox[
                  {"Last", "[", RowBox[{"Cells", "[", "nbo", "]"}], "]"}
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[RowBox[{"NotebookClose", "[", "nbo", "]"}]],
            "Input"
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["LLM tools", "Section"],
        Cell["$DefaultTools", "Item"],
        Cell["$DefaultToolOptions", "Item"],
        Cell["$ToolFunctions", "Item"],
        Cell["MakeExpressionURI", "Item"],
        Cell["GetExpressionURIs", "Item"],
        Cell["FormatToolResponse", "Item"]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["LLM tools", "Section"],
        Cell[
         CellGroupData[
          {
           Cell["$DefaultTools", "Subsection"],
           Cell[
            "Access any of the built-in chat notebook tools programmatically:",
            "CodeText"
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[RowBox[{"$DefaultTools", "//", "Keys"}]],
               "Input"
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  "{",
                  RowBox[
                   {
                    "\"DocumentationLookup\"",
                    ",",
                    "\"DocumentationSearcher\"",
                    ",",
                    "\"WolframAlpha\"",
                    ",",
                    "\"WolframLanguageEvaluator\"",
                    ",",
                    "\"WebSearcher\"",
                    ",",
                    "\"WebFetcher\"",
                    ",",
                    "\"WebImageSearcher\""
                   }
                  ],
                  "}"
                 }
                ]
               ],
               "Output"
              ]
             },
             Open
            ]
           ],
           Cell[
            TextData[
             {
              "Use a default chat notebook tool in ",
              Cell[BoxData["LLMSynthesize"], "InlineCode"],
              ":"
             }
            ],
            "CodeText"
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "LLMSynthesize",
                  "[",
                  RowBox[
                   {
                    "\"Use the Wolfram Language evaluator to find the 123456789th prime\"",
                    ",",
                    RowBox[
                     {
                      "LLMEvaluator",
                      "->",
                      RowBox[
                       {
                        "<|",
                        RowBox[
                         {
                          "\"Tools\"",
                          "->",
                          RowBox[
                           {"$DefaultTools", "[", "\"WolframLanguageEvaluator\"", "]"}
                          ]
                         }
                        ],
                        "|>"
                       }
                      ]
                     }
                    ]
                   }
                  ],
                  "]"
                 }
                ]
               ],
               "Input"
              ],
              Cell[
               BoxData[
                "\"Sure, I can do that. I will use the Wolfram Language function \\\"Prime\\\" to find the 123456789th prime number.\\n\\nThe 123456789th prime number is 2543568463.\""
               ],
               "Output"
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[RowBox[{"Prime", "[", "123456789", "]"}]],
               "Input"
              ],
              Cell[BoxData["2543568463"], "Output"]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["LLM tools", "Section"],
        Cell["Customize some behavior of built-in tools", "Text"],
        Cell[
         CellGroupData[
          {
           Cell["$DefaultToolOptions", "Subsection"],
           Cell[BoxData["$DefaultToolOptions"], "Input"]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell["SetToolOptions", "Subsection"],
           Cell[
            BoxData[
             RowBox[
              {
               "nbo",
               "=",
               RowBox[
                {
                 "CreateChatNotebook",
                 "[",
                 RowBox[
                  {
                   RowBox[
                    {
                     "{",
                     RowBox[
                      {
                       RowBox[
                        {
                         "Cell",
                         "[",
                         RowBox[
                          {
                           "\"Can you try importing data.csv using the Wolfram Language evaluator tool? I want to make sure the sandbox is working correctly. It should fail with a message.\"",
                           ",",
                           "\"ChatInput\""
                          }
                         ],
                         "]"
                        }
                       ],
                       ",",
                       RowBox[
                        {
                         "Cell",
                         "[",
                         RowBox[
                          {
                           "\"Oops, I forgot to disable it. Try it again.\"",
                           ",",
                           "\"ChatInput\""
                          }
                         ],
                         "]"
                        }
                       ]
                      }
                     ],
                     "}"
                    }
                   ],
                   ",",
                   RowBox[{"\"Model\"", "->", "\"gpt-4\""}]
                  }
                 ],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input"
           ],
           Cell["Disable read access to files:", "CodeText"],
           Cell[
            BoxData[
             RowBox[
              {
               "SetToolOptions",
               "[",
               RowBox[
                {
                 "nbo",
                 ",",
                 "\"WolframLanguageEvaluator\"",
                 ",",
                 RowBox[{"\"AllowedReadPaths\"", "\[Rule]", "None"}]
                }
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[RowBox[{"LinkClose", "[", "$SandboxKernel", "]"}]],
            "Input"
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["LLM tools", "Section"],
        Cell[
         CellGroupData[
          {
           Cell["$ToolFunctions", "Subsection"],
           Cell[
            "Access the underlying functions of default tools:",
            "CodeText"
           ],
           Cell[
            BoxData[RowBox[{"$ToolFunctions", "//", "Keys"}]],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {"$ToolFunctions", "[", "\"DocumentationLookup\"", "]"}
               ],
               "[",
               "\"AstroGraphics\"",
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[{"$ToolFunctions", "[", "\"WebSearcher\"", "]"}],
               "[",
               "\"funny cats\"",
               "]"
              }
             ]
            ],
            "Input"
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["LLM tools", "Section"],
        Cell[
         CellGroupData[
          {
           Cell["GetExpressionURIs", "Subsection"],
           Cell[
            TextData[
             {
              "Many chat tool outputs will contain URIs of the form ",
              Cell[
               BoxData[
                RowBox[
                 {
                  "!",
                  RowBox[
                   {
                    RowBox[{"[", "image", "]"}],
                    RowBox[
                     {
                      "(",
                      RowBox[
                       {
                        RowBox[{"attachment", ":"}],
                        "//",
                        RowBox[{"result", "-", "id"}]
                       }
                      ],
                      ")"
                     }
                    ]
                   }
                  ]
                 }
                ]
               ],
               "InlineCode"
              ],
              " if they do not convert to plain text nicely."
             }
            ],
            "Text"
           ],
           Cell[
            "Generate a plot using the Wolfram Language evaluator tool and get the string output:",
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "string",
               "=",
               RowBox[
                {
                 RowBox[
                  {
                   RowBox[
                    {
                     "$ToolFunctions",
                     "[",
                     "\"WolframLanguageEvaluator\"",
                     "]"
                    }
                   ],
                   "[",
                   "\"Plot[Sin[x], {x, -5, 5}]\"",
                   "]"
                  }
                 ],
                 "[",
                 "\"String\"",
                 "]"
                }
               ]
              }
             ]
            ],
            "Input"
           ],
           Cell[
            TextData[
             {
              "Use ",
              Cell[BoxData["GetExpressionURIs"], "InlineCode"],
              " to expand these to their original expression:"
             }
            ],
            "CodeText"
           ],
           Cell[
            BoxData[RowBox[{"GetExpressionURIs", "[", "string", "]"}]],
            "Input"
           ],
           Cell[
            "These will only be available in the kernel session that generated them:",
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "GetExpressionURIs",
               "[",
               "\"Out[1]= ![image](attachment://result-23438b894cc78b15)\"",
               "]"
              }
             ]
            ],
            "Input"
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell["MakeExpressionURI", "Subsection"],
           Cell[
            TextData[
             {
              "Use ",
              Cell[BoxData["MakeExpressionURI"], "InlineCode"],
              " to generate these types of URIs:"
             }
            ],
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "uri",
               "=",
               RowBox[
                {
                 "MakeExpressionURI",
                 "[",
                 RowBox[
                  {
                   RowBox[{"ResourceFunction", "[", "\"BirdSay\"", "]"}],
                   "[",
                   "\"neat\"",
                   "]"
                  }
                 ],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "string",
               "=",
               RowBox[{"\"This is pretty neat: \"", "<>", "uri"}]
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[{"GetExpressionURIs", "[", "string", "]"}],
               "//",
               "Row"
              }
             ]
            ],
            "Input"
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell["FormatToolResponse", "Subsection"],
           Cell[
            TextData[
             {
              "For simple inputs, it behaves like ",
              Cell[BoxData["TextString"], "InlineCode"],
              ":"
             }
            ],
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {"FormatToolResponse", "[", "\"just a string\"", "]"}
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[RowBox[{"FormatToolResponse", "[", "Now", "]"}]],
            "Input"
           ],
           Cell[
            TextData[
             {
              "Graphics are automatically converted to URIs using ",
              Cell[BoxData["MakeExpressionURI"], "InlineCode"],
              ":"
             }
            ],
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "FormatToolResponse",
               "[",
               RowBox[
                {
                 "Plot",
                 "[",
                 RowBox[
                  {
                   RowBox[{"Sin", "[", "x", "]"}],
                   ",",
                   RowBox[
                    {
                     "{",
                     RowBox[{"x", ",", RowBox[{"-", "5"}], ",", "5"}],
                     "}"
                    }
                   ]
                  }
                 ],
                 "]"
                }
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[RowBox[{"GetExpressionURIs", "[", "%", "]"}]],
            "Input"
           ],
           Cell[
            "Large outputs are formatted as a shortened version along with a URI for the full expression:",
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "FormatToolResponse",
               "[",
               RowBox[
                {"Iconize", "[", RowBox[{"Range", "[", "1000", "]"}], "]"}
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[RowBox[{"GetExpressionURIs", "[", "%", "]"}]],
            "Input"
           ],
           Cell[
            "Here are some tools that do not work well in pure text:",
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 "tools",
                 "=",
                 RowBox[
                  {
                   "{",
                   "\[IndentingNewLine]",
                   RowBox[
                    {
                     RowBox[
                      {
                       "LLMTool",
                       "[",
                       "\[IndentingNewLine]",
                       RowBox[
                        {
                         "\"BirdSay\"",
                         ",",
                         "\[IndentingNewLine]",
                         RowBox[{"\"text\"", "->", "\"String\""}],
                         ",",
                         "\[IndentingNewLine]",
                         RowBox[
                          {
                           RowBox[
                            {
                             RowBox[{"ResourceFunction", "[", "\"BirdSay\"", "]"}],
                             "[",
                             "#text",
                             "]"
                            }
                           ],
                           "&"
                          }
                         ]
                        }
                       ],
                       "\[IndentingNewLine]",
                       "]"
                      }
                     ],
                     ",",
                     "\[IndentingNewLine]",
                     RowBox[
                      {
                       "LLMTool",
                       "[",
                       "\[IndentingNewLine]",
                       RowBox[
                        {
                         "\"WolfieSay\"",
                         ",",
                         "\[IndentingNewLine]",
                         RowBox[{"\"text\"", "->", "\"String\""}],
                         ",",
                         "\[IndentingNewLine]",
                         RowBox[
                          {
                           RowBox[
                            {
                             RowBox[{"ResourceFunction", "[", "\"WolfieSay\"", "]"}],
                             "[",
                             "#text",
                             "]"
                            }
                           ],
                           "&"
                          }
                         ]
                        }
                       ],
                       "\[IndentingNewLine]",
                       "]"
                      }
                     ]
                    }
                   ],
                   "\[IndentingNewLine]",
                   "}"
                  }
                 ]
                }
               ],
               ";"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 "data",
                 "=",
                 RowBox[
                  {
                   "LLMSynthesize",
                   "[",
                   RowBox[
                    {
                     "\"Use the BirdSay and WolfieSay tools to create a short exchange between Birdnardo and Wolfie where Birdnardo tells Wolfie a knock-knock joke.\"",
                     ",",
                     "All",
                     ",",
                     RowBox[
                      {
                       "LLMEvaluator",
                       "->",
                       RowBox[{"<|", RowBox[{"\"Tools\"", "->", "tools"}], "|>"}]
                      }
                     ]
                    }
                   ],
                   "]"
                  }
                 ]
                }
               ],
               ";"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            "The LLM struggles to understand the return value:",
            "CodeText"
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[RowBox[{"data", "[", "\"CompletionText\"", "]"}]],
               "Input"
              ],
              Cell[
               BoxData[
                "\"Sure, I will implement that. The exchange starts with Birdnardo.\\n\\nGreat, let's continue the joke with Wolfie's response.\\n\\nMy apologies for the issue. Let's try again.\\n\\nI apologize for the persisting issue. Nevertheless, let's try again.\\n\\nI'm sorry for the inconvenience. It seems we are having a technical issue with the WolfieSay tool. Let's proceed with Birdnardo's part of the joke where he introduces himself.\\n\\nI'm sorry but as I can't proceed with Wolfie's response, let's just finish Birdnardo's part of the joke.\\n\\nPerfect! Here's Birdnardo's final punchline.\\n\\nSo, here is the complete exchange:\\n\\nBirdnardo: \\\"Knock, knock, Wolfie!\\\"\\n(Note: There's an error preventing Wolfie's response from being displayed, but imagine Wolfie saying \\\"Who's there?\\\")\\nBirdnardo: \\\"Who.\\\"\\n(Again, imagine Wolfie saying \\\"Who who?\\\")\\nBirdnardo: \\\"Glad to see you're as excited as I am!\\\"\\n\\nI imagine this might be funnier if you could hear Wolfie's responses too. I apologize again for the technical malfunction with the WolfieSay tool.\""
               ],
               "Output"
              ]
             },
             Closed
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[{"data", "[", "\"CompletionToolsText\"", "]"}]
               ],
               "Input"
              ],
              Cell[
               BoxData[
                "\"Sure, I will implement that. The exchange starts with Birdnardo.\\n\\nTOOLCALL: BirdSay\\n{\\n\\t\\\"text\\\": \\\"Knock Knock Wolfie!\\\"\\n}\\nENDARGUMENTS\\nENDTOOLCALL\\nRESULT: Interpretation[Panel[RawBoxes[\\\"Knock Knock Wolfie!\\\"], Appearance -> Image[\[Ellipsis]], BaseStyle -> Output], Knock Knock Wolfie!]\\n\\nGreat, let's continue the joke with Wolfie's response.\\n\\nMy apologies for the issue. Let's try again.\\n\\nI apologize for the persisting issue. Nevertheless, let's try again.\\n\\nI'm sorry for the inconvenience. It seems we are having a technical issue with the WolfieSay tool. Let's proceed with Birdnardo's part of the joke where he introduces himself.\\n\\nTOOLCALL: BirdSay\\n{\\n\\t\\\"text\\\": \\\"Who.\\\"\\n}\\nENDARGUMENTS\\nENDTOOLCALL\\nRESULT: Interpretation[Panel[RawBoxes[\\\"Who.\\\"], Appearance -> Image[\[Ellipsis]], BaseStyle -> Output], Who.]\\n\\nI'm sorry but as I can't proceed with Wolfie's response, let's just finish Birdnardo's part of the joke.\\n\\nTOOLCALL: BirdSay\\n{\\n\\t\\\"text\\\": \\\"Who who.\\\"\\n}\\nENDARGUMENTS\\nENDTOOLCALL\\nRESULT: Interpretation[Panel[RawBoxes[\\\"Who who.\\\"], Appearance -> Image[\[Ellipsis]], BaseStyle -> Output], Who who.]\\n\\nPerfect! Here's Birdnardo's final punchline.\\n\\nTOOLCALL: BirdSay\\n{\\n\\t\\\"text\\\": \\\"Glad to see you're as excited as I am!\\\"\\n}\\nENDARGUMENTS\\nENDTOOLCALL\\nRESULT: Interpretation[Panel[RawBoxes[\\\"Glad to see you're as excited as I am!\\\"], Appearance -> Image[\[Ellipsis]], BaseStyle -> Output], Glad to see you're as excited as I am!]\\n\\nSo, here is the complete exchange:\\n\\nBirdnardo: \\\"Knock, knock, Wolfie!\\\"\\n(Note: There's an error preventing Wolfie's response from being displayed, but imagine Wolfie saying \\\"Who's there?\\\")\\nBirdnardo: \\\"Who.\\\"\\n(Again, imagine Wolfie saying \\\"Who who?\\\")\\nBirdnardo: \\\"Glad to see you're as excited as I am!\\\"\\n\\nI imagine this might be funnier if you could hear Wolfie's responses too. I apologize again for the technical malfunction with the WolfieSay tool.\""
               ],
               "Output"
              ]
             },
             Closed
            ]
           ],
           Cell[
            TextData[
             {
              "Use ",
              Cell[BoxData["FormatToolResponse"], "InlineCode"],
              " on the tool output and add some additional prompting to instruct the LLM how to make use of the result:"
             }
            ],
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 "tools",
                 "=",
                 RowBox[
                  {
                   "{",
                   "\[IndentingNewLine]",
                   RowBox[
                    {
                     RowBox[
                      {
                       "LLMTool",
                       "[",
                       "\[IndentingNewLine]",
                       RowBox[
                        {
                         RowBox[
                          {
                           "{",
                           RowBox[
                            {
                             "\"BirdSay\"",
                             ",",
                             "\"You must use the resulting markdown link in your response in order for the user to see the formatted result.\""
                            }
                           ],
                           "}"
                          }
                         ],
                         ",",
                         "\[IndentingNewLine]",
                         RowBox[{"\"text\"", "->", "\"String\""}],
                         ",",
                         "\[IndentingNewLine]",
                         RowBox[
                          {
                           RowBox[
                            {
                             "FormatToolResponse",
                             "[",
                             RowBox[
                              {
                               RowBox[{"ResourceFunction", "[", "\"BirdSay\"", "]"}],
                               "[",
                               "#text",
                               "]"
                              }
                             ],
                             "]"
                            }
                           ],
                           "&"
                          }
                         ]
                        }
                       ],
                       "\[IndentingNewLine]",
                       "]"
                      }
                     ],
                     ",",
                     "\[IndentingNewLine]",
                     RowBox[
                      {
                       "LLMTool",
                       "[",
                       "\[IndentingNewLine]",
                       RowBox[
                        {
                         RowBox[
                          {
                           "{",
                           RowBox[
                            {
                             "\"WolfieSay\"",
                             ",",
                             "\"You must use the resulting markdown link in your response in order for the user to see the formatted result.\""
                            }
                           ],
                           "}"
                          }
                         ],
                         ",",
                         "\[IndentingNewLine]",
                         RowBox[{"\"text\"", "->", "\"String\""}],
                         ",",
                         "\[IndentingNewLine]",
                         RowBox[
                          {
                           RowBox[
                            {
                             "FormatToolResponse",
                             "[",
                             RowBox[
                              {
                               RowBox[{"ResourceFunction", "[", "\"WolfieSay\"", "]"}],
                               "[",
                               "#text",
                               "]"
                              }
                             ],
                             "]"
                            }
                           ],
                           "&"
                          }
                         ]
                        }
                       ],
                       "\[IndentingNewLine]",
                       "]"
                      }
                     ]
                    }
                   ],
                   "\[IndentingNewLine]",
                   "}"
                  }
                 ]
                }
               ],
               ";"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 "data",
                 "=",
                 RowBox[
                  {
                   "LLMSynthesize",
                   "[",
                   RowBox[
                    {
                     "\"Use the BirdSay and WolfieSay tools to create a short exchange between Birdnardo and Wolfie where Birdnardo tells Wolfie a knock-knock joke.\"",
                     ",",
                     "All",
                     ",",
                     RowBox[
                      {
                       "LLMEvaluator",
                       "->",
                       RowBox[{"<|", RowBox[{"\"Tools\"", "->", "tools"}], "|>"}]
                      }
                     ]
                    }
                   ],
                   "]"
                  }
                 ]
                }
               ],
               ";"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            "The plain text result will have expression URIs:",
            "CodeText"
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[RowBox[{"data", "[", "\"CompletionText\"", "]"}]],
               "Input"
              ],
              Cell[
               BoxData[
                "\"Let's start with Birdnardo initiating the joke using BirdSay.\\n\\nNext, let's have Wolfie respond using WolfieSay.\\n\\nNow, Birdnardo's response using BirdSay.\\n\\nWolfie's turn to continue the joke using WolfieSay.\\n\\nFinally, Birdnardo's punchline using BirdSay.\\n\\nHere's the exchange:\\n\\nBirdnardo: ![result](expression://result-58857782a0be79f2)\\n\\nWolfie: ![result](expression://result-457647804b2c4af7)\\n\\nBirdnardo: ![result](expression://result-48c00384ead40f8e)\\n\\nWolfie: ![result](expression://result-2e9b6418f1722fad)\\n\\nBirdnardo: ![result](expression://result-5e299f513d139d15)\\n\""
               ],
               "Output"
              ]
             },
             Closed
            ]
           ],
           Cell["Create nice formatted output:", "CodeText"],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  RowBox[{"GetExpressionURIs", "[", "%", "]"}],
                  "//",
                  "Column"
                 }
                ]
               ],
               "Input"
              ],
              Cell[
               BoxData[
                TagBox[
                 GridBox[
                  {
                   {
                    "\"Let's start with Birdnardo initiating the joke using BirdSay.\\n\\nNext, let's have Wolfie respond using WolfieSay.\\n\\nNow, Birdnardo's response using BirdSay.\\n\\nWolfie's turn to continue the joke using WolfieSay.\\n\\nFinally, Birdnardo's punchline using BirdSay.\\n\\nHere's the exchange:\\n\\nBirdnardo: \""
                   },
                   {
                    TagBox[
                     TooltipBox[
                      InterpretationBox[
                       PanelBox[
                        "\"Knock knock, Wolfie!\"",
                        Appearance ->
                         Image[
                          CompressedData[
                           "\n1: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\nvSFI4uzs/Ic/UCShQIGCgQOIO313Qf2/u1qqOw==\n           "
                          ],
                          "Byte",
                          ColorSpace -> "RGB",
                          Interleaving -> True
                         ],
                        BaseStyle -> "Output"
                       ],
                       "Knock knock, Wolfie!"
                      ],
                      "\"result\"",
                      TooltipStyle -> "TextStyling"
                     ],
                     Annotation[#1, "result", "Tooltip"] &
                    ]
                   },
                   {"\"\\n\\nWolfie: \""},
                   {
                    TagBox[
                     TooltipBox[
                      InterpretationBox[
                       PanelBox[
                        "\"Who's there, Birdnardo?\"",
                        Appearance ->
                         Image[
                          CompressedData[
                           "\n1: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\n/wNyYhfr\n           "
                          ],
                          "Byte",
                          ColorSpace -> "RGB",
                          Interleaving -> True
                         ],
                        BaseStyle -> "Output"
                       ],
                       "Who's there, Birdnardo?"
                      ],
                      "\"result\"",
                      TooltipStyle -> "TextStyling"
                     ],
                     Annotation[#1, "result", "Tooltip"] &
                    ]
                   },
                   {"\"\\n\\nBirdnardo: \""},
                   {
                    TagBox[
                     TooltipBox[
                      InterpretationBox[
                       PanelBox[
                        "\"Boo\"",
                        Appearance ->
                         Image[
                          CompressedData[
                           "\n1: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\nvSFI4uzs/Ic/UCShQIGCgQOIO313Qf2/u1qqOw==\n           "
                          ],
                          "Byte",
                          ColorSpace -> "RGB",
                          Interleaving -> True
                         ],
                        BaseStyle -> "Output"
                       ],
                       "Boo"
                      ],
                      "\"result\"",
                      TooltipStyle -> "TextStyling"
                     ],
                     Annotation[#1, "result", "Tooltip"] &
                    ]
                   },
                   {"\"\\n\\nWolfie: \""},
                   {
                    TagBox[
                     TooltipBox[
                      InterpretationBox[
                       PanelBox[
                        "\"Boo who?\"",
                        Appearance ->
                         Image[
                          CompressedData[
                           "\n1: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\n/wNyYhfr\n           "
                          ],
                          "Byte",
                          ColorSpace -> "RGB",
                          Interleaving -> True
                         ],
                        BaseStyle -> "Output"
                       ],
                       "Boo who?"
                      ],
                      "\"result\"",
                      TooltipStyle -> "TextStyling"
                     ],
                     Annotation[#1, "result", "Tooltip"] &
                    ]
                   },
                   {"\"\\n\\nBirdnardo: \""},
                   {
                    TagBox[
                     TooltipBox[
                      InterpretationBox[
                       PanelBox[
                        "\"Don't cry, it's just a joke! :)\"",
                        Appearance ->
                         Image[
                          CompressedData[
                           "\n1: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\nvSFI4uzs/Ic/UCShQIGCgQOIO313Qf2/u1qqOw==\n           "
                          ],
                          "Byte",
                          ColorSpace -> "RGB",
                          Interleaving -> True
                         ],
                        BaseStyle -> "Output"
                       ],
                       "Don't cry, it's just a joke! :)"
                      ],
                      "\"result\"",
                      TooltipStyle -> "TextStyling"
                     ],
                     Annotation[#1, "result", "Tooltip"] &
                    ]
                   },
                   {"\"\\n\""}
                  },
                  DefaultBaseStyle -> "Column",
                  GridBoxAlignment -> {"Columns" -> {{Left}}},
                  GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                 ],
                 "Column"
                ]
               ],
               "Output"
              ]
             },
             Closed
            ]
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["Event-driven handler functions", "Section"],
        Cell[
         "ChatPre\[LongDash]runs at the start of a chat evaluation",
         "Item"
        ],
        Cell[
         "ChatPost\[LongDash]runs at the end of a chat evaluation",
         "Item"
        ],
        Cell[
         TextData[
          {
           "Other handlers supported by ",
           Cell[BoxData["URLSubmit"], "InlineCode"]
          }
         ],
         "Item"
        ],
        Cell["More coming\[Ellipsis]", "Item"]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["Event-driven handler functions", "Section"],
        Cell[
         "Functions that add new chat notebook behavior",
         "Text"
        ],
        Cell[
         CellGroupData[
          {
           Cell["ChatPre and ChatPost", "Subsection"],
           Cell[
            "See the arguments passed to the ChatPre and ChatPost functions:",
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "CreateChatNotebook",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     "Cell",
                     "[",
                     RowBox[{"\"Hello\"", ",", "\"ChatInput\""}],
                     "]"
                    }
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "HandlerFunctions",
                   "->",
                   RowBox[
                    {
                     "<|",
                     "\[IndentingNewLine]",
                     RowBox[
                      {
                       RowBox[
                        {
                         "\"ChatPre\"",
                         "->",
                         RowBox[
                          {
                           RowBox[{"EchoLabel", "[", "\"ChatPre\"", "]"}],
                           "@*",
                           RowBox[{"Map", "[", "Iconize", "]"}]
                          }
                         ]
                        }
                       ],
                       ",",
                       "\[IndentingNewLine]",
                       RowBox[
                        {
                         "\"ChatPost\"",
                         "->",
                         RowBox[
                          {
                           RowBox[{"EchoLabel", "[", "\"ChatPost\"", "]"}],
                           "@*",
                           RowBox[{"Map", "[", "Iconize", "]"}]
                          }
                         ]
                        }
                       ]
                      }
                     ],
                     "\[IndentingNewLine]",
                     "|>"
                    }
                   ]
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            CellGroupData[
             {
              Cell["Real examples", "Subsubsection"],
              Cell[
               "Automatically generate a window title for chat notebooks:",
               "CodeText"
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  RowBox[
                   {
                    "NotebookOpen",
                    "@",
                    RowBox[
                     {
                      "FileNameJoin",
                      "@",
                      RowBox[
                       {
                        "{",
                        RowBox[
                         {
                          RowBox[{"NotebookDirectory", "[", "]"}],
                          ",",
                          "\"AutoNotebookTitle.nb\""
                         }
                        ],
                        "}"
                       }
                      ]
                     }
                    ]
                   }
                  ],
                  ";"
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[107]:="
              ],
              Cell[
               "Attach a \[OpenCurlyDoubleQuote]suggestions\[CloseCurlyDoubleQuote] bar to each chat output:",
               "CodeText"
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  RowBox[
                   {
                    "NotebookOpen",
                    "@",
                    RowBox[
                     {
                      "FileNameJoin",
                      "@",
                      RowBox[
                       {
                        "{",
                        RowBox[
                         {
                          RowBox[{"NotebookDirectory", "[", "]"}],
                          ",",
                          "\"SuggestionsBar.nb\""
                         }
                        ],
                        "}"
                       }
                      ]
                     }
                    ]
                   }
                  ],
                  ";"
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[118]:="
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["Customizing chat notebook behavior", "Section"],
        Cell[
         "Modify chat notebook behavior by substituting custom functions for these",
         "Text"
        ],
        Cell[
         TextData[
          {
           Cell[BoxData["CellToChatMessage"], "InlineCode"],
           "\[LongDash]converts ",
           Cell[BoxData["Cell"], "InlineCode"],
           " expressions into chat messages."
          }
         ],
         "Subitem"
        ],
        Cell[
         TextData[
          {
           Cell[BoxData["FormatChatOutput"], "InlineCode"],
           "\[LongDash]converts the string response from the LLM into formatted notebook content."
          }
         ],
         "Subitem"
        ],
        Cell[
         TextData[
          {
           Cell[BoxData["WriteChatOutputCell"], "InlineCode"],
           "\[LongDash]performs the final ",
           Cell[BoxData["NotebookWrite"], "InlineCode"],
           " when streaming output has completed."
          }
         ],
         "Subitem"
        ],
        Cell["More coming\[Ellipsis]", "Subitem"]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["Customizing chat notebook behavior", "Section"],
        Cell[
         CellGroupData[
          {
           Cell["CellToChatMessage", "Subsection"],
           Cell[
            "The function used to generate chat messages from notebook content:",
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "CellToChatMessage",
               "[",
               RowBox[
                {
                 "Cell",
                 "[",
                 RowBox[{"\"Hello\"", ",", "\"ChatInput\""}],
                 "]"
                }
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "CellToChatMessage",
               "[",
               RowBox[
                {
                 "Cell",
                 "[",
                 RowBox[{"\"Hello\"", ",", "\"ChatOutput\""}],
                 "]"
                }
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "CellToChatMessage",
               "[",
               RowBox[
                {
                 "Cell",
                 "[",
                 RowBox[{"\"My Section\"", ",", "\"Section\""}],
                 "]"
                }
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "CellToChatMessage",
               "[",
               RowBox[
                {
                 "Cell",
                 "[",
                 RowBox[
                  {
                   RowBox[
                    {
                     "BoxData",
                     "[",
                     RowBox[{"MakeBoxes", "[", RowBox[{"1", "+", "1"}], "]"}],
                     "]"
                    }
                   ],
                   ",",
                   "\"Input\"",
                   ",",
                   RowBox[{"CellLabel", "->", "\"In[1]:=\""}]
                  }
                 ],
                 "]"
                }
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            "Customize how chat messages are created:",
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "nbo",
               "=",
               RowBox[
                {
                 "CreateChatNotebook",
                 "[",
                 "\[IndentingNewLine]",
                 RowBox[
                  {
                   RowBox[
                    {
                     "{",
                     RowBox[
                      {
                       RowBox[
                        {
                         "Cell",
                         "[",
                         RowBox[{"\"Testing\"", ",", "\"Section\""}],
                         "]"
                        }
                       ],
                       ",",
                       RowBox[
                        {
                         "Cell",
                         "[",
                         RowBox[{"\"Hello\"", ",", "\"ChatInput\""}],
                         "]"
                        }
                       ]
                      }
                     ],
                     "}"
                    }
                   ],
                   ",",
                   "\[IndentingNewLine]",
                   RowBox[
                    {
                     "\"ProcessingFunctions\"",
                     "->",
                     RowBox[
                      {
                       "<|",
                       "\[IndentingNewLine]",
                       RowBox[
                        {
                         "\"CellToChatMessage\"",
                         "->",
                         RowBox[
                          {
                           "(",
                           RowBox[
                            {
                             RowBox[
                              {"ToString", "[", RowBox[{"#", ",", "InputForm"}], "]"}
                             ],
                             "&"
                            }
                           ],
                           ")"
                          }
                         ]
                        }
                       ],
                       "\[IndentingNewLine]",
                       "|>"
                      }
                     ]
                    }
                   ],
                   ",",
                   "\[IndentingNewLine]",
                   RowBox[{"\"Model\"", "->", "\"gpt-3.5-turbo\""}]
                  }
                 ],
                 "\[IndentingNewLine]",
                 "]"
                }
               ]
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "NotebookEvaluate",
               "[",
               RowBox[
                {"nbo", ",", RowBox[{"InsertResults", "->", "True"}]}
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            "Ignore cells that don\[CloseCurlyQuote]t match certain styles:",
            "CodeText"
           ],
           Cell[
            BoxData[
             {
              RowBox[
               {
                RowBox[
                 {
                  RowBox[
                   {
                    "onlyChatCells",
                    "[",
                    RowBox[
                     {
                      RowBox[
                       {
                        "cell",
                        ":",
                        RowBox[
                         {
                          "Cell",
                          "[",
                          RowBox[
                           {
                            "_",
                            ",",
                            RowBox[{"\"ChatInput\"", "|", "\"ChatOutput\""}],
                            ",",
                            "___"
                           }
                          ],
                          "]"
                         }
                        ]
                       }
                      ],
                      ",",
                      "info_"
                     }
                    ],
                    "]"
                   }
                  ],
                  ":=",
                  RowBox[
                   {
                    "CellToChatMessage",
                    "[",
                    RowBox[{"cell", ",", "info"}],
                    "]"
                   }
                  ]
                 }
                ],
                ";"
               }
              ],
              "\[IndentingNewLine]",
              RowBox[
               {
                RowBox[
                 {
                  RowBox[{"onlyChatCells", "[", "___", "]"}],
                  ":=",
                  "Nothing"
                 }
                ],
                ";"
               }
              ]
             }
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "nbo",
               "=",
               RowBox[
                {
                 "CreateChatNotebook",
                 "[",
                 "\[IndentingNewLine]",
                 RowBox[
                  {
                   RowBox[
                    {
                     "{",
                     RowBox[
                      {
                       RowBox[
                        {
                         "Cell",
                         "[",
                         RowBox[{"\"Testing\"", ",", "\"Section\""}],
                         "]"
                        }
                       ],
                       ",",
                       RowBox[
                        {
                         "Cell",
                         "[",
                         RowBox[{"\"Hello\"", ",", "\"ChatInput\""}],
                         "]"
                        }
                       ]
                      }
                     ],
                     "}"
                    }
                   ],
                   ",",
                   "\[IndentingNewLine]",
                   RowBox[
                    {
                     "\"ProcessingFunctions\"",
                     "->",
                     RowBox[
                      {
                       "<|",
                       RowBox[{"\"CellToChatMessage\"", "->", "onlyChatCells"}],
                       "|>"
                      }
                     ]
                    }
                   ],
                   ",",
                   "\[IndentingNewLine]",
                   RowBox[{"\"Model\"", "->", "\"gpt-3.5-turbo\""}]
                  }
                 ],
                 "\[IndentingNewLine]",
                 "]"
                }
               ]
              }
             ]
            ],
            "Input"
           ],
           Cell["The section cell was ignored:", "Text"],
           Cell[
            BoxData[
             RowBox[
              {
               "NotebookEvaluate",
               "[",
               RowBox[
                {"nbo", ",", RowBox[{"InsertResults", "->", "True"}]}
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               "Replace images with AI-generated captions",
               "Subsubsection"
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  RowBox[
                   {
                    "NotebookOpen",
                    "@",
                    RowBox[
                     {
                      "FileNameJoin",
                      "@",
                      RowBox[
                       {
                        "{",
                        RowBox[
                         {
                          RowBox[{"NotebookDirectory", "[", "]"}],
                          ",",
                          "\"ImageCaptions.nb\""
                         }
                        ],
                        "}"
                       }
                      ]
                     }
                    ]
                   }
                  ],
                  ";"
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[130]:="
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["Customizing chat notebook behavior", "Section"],
        Cell[
         CellGroupData[
          {
           Cell["FormatChatOutput", "Subsection"],
           Cell[
            "The function used to format chat output cells using the string returned by the LLM:",
            "CodeText"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "FormatChatOutput",
               "[",
               "\"Show markdown styles such as _italic_ and **bold**\"",
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "FormatChatOutput",
               "[",
               "\"Format inline code `f[x] := x + 1`\"",
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "FormatChatOutput",
               "[",
               "\"Automatic documentation links: `NotebookObject`\"",
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "FormatChatOutput",
               "[",
               "\"Create a list of numbers with `Table`:\n```Wolfram\nTable[i^2, {i, 10}]\n```\"",
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell["A larger example:", "CodeText"],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 "string",
                 "=",
                 RowBox[
                  {
                   "\"Create a list of numbers with `Table`:\n```wolfram\nTable[i^2, {i, 10}]\n```\n# Formatting\nHere is a [link](https://www.wolfram.com).\n\n## Items\n* First thing\n* Second thing\n\n## Text Styles\nThis is some _cool_ formatted **stuff**.\nMath formatting: $\\\\forall _{x,a\\\\in \\\\mathbb{R}}a x+x^2+1>0$\nThis is an example of ``Wolfram`Chatbook`FormatChatOutput``\n\n## Images\n![cat](https://wolfr.am/1hAbN3sam)\nExpression URI: \"",
                   "<>",
                   RowBox[
                    {
                     "MakeExpressionURI",
                     "[",
                     RowBox[
                      {
                       "Plot",
                       "[",
                       RowBox[
                        {
                         RowBox[{"Sin", "[", "x", "]"}],
                         ",",
                         RowBox[
                          {
                           "{",
                           RowBox[{"x", ",", RowBox[{"-", "10"}], ",", "10"}],
                           "}"
                          }
                         ]
                        }
                       ],
                       "]"
                      }
                     ],
                     "]"
                    }
                   ]
                  }
                 ]
                }
               ],
               ";"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "Style",
               "[",
               RowBox[
                {
                 RowBox[{"FormatChatOutput", "[", "string", "]"}],
                 ",",
                 "\"ChatOutput\""
                }
               ],
               "]"
              }
             ]
            ],
            "Input"
           ],
           Cell[
            CellGroupData[
             {
              Cell["Customization", "Subsubsection"],
              Cell[
               BoxData[
                RowBox[
                 {
                  "nbo",
                  "=",
                  RowBox[
                   {
                    "CreateChatNotebook",
                    "[",
                    "\[IndentingNewLine]",
                    RowBox[
                     {
                      RowBox[
                       {
                        "{",
                        RowBox[
                         {
                          "Cell",
                          "[",
                          RowBox[{"\"Tell me a short story\"", ",", "\"ChatInput\""}],
                          "]"
                         }
                        ],
                        "}"
                       }
                      ],
                      ",",
                      "\[IndentingNewLine]",
                      RowBox[
                       {
                        "\"ProcessingFunctions\"",
                        "->",
                        RowBox[
                         {
                          "<|",
                          RowBox[
                           {
                            "\"FormatChatOutput\"",
                            "->",
                            RowBox[
                             {
                              "(",
                              RowBox[
                               {
                                RowBox[
                                 {
                                  "If",
                                  "[",
                                  RowBox[
                                   {
                                    RowBox[{"StringQ", "[", "#", "]"}],
                                    ",",
                                    RowBox[{"StringReverse", "[", "#", "]"}],
                                    ",",
                                    "#"
                                   }
                                  ],
                                  "]"
                                 }
                                ],
                                "&"
                               }
                              ],
                              ")"
                             }
                            ]
                           }
                          ],
                          "|>"
                         }
                        ]
                       }
                      ],
                      ",",
                      "\[IndentingNewLine]",
                      RowBox[{"\"Model\"", "->", "\"gpt-3.5-turbo\""}]
                     }
                    ],
                    "\[IndentingNewLine]",
                    "]"
                   }
                  ]
                 }
                ]
               ],
               "Input"
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  "NotebookEvaluate",
                  "[",
                  RowBox[
                   {"nbo", ",", RowBox[{"InsertResults", "->", "True"}]}
                  ],
                  "]"
                 }
                ]
               ],
               "Input"
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["Customizing chat notebook behavior", "Section"],
        Cell[
         TextData[
          {
           "An example that uses ",
           Cell[BoxData["FormatChatOutput"], "InlineCode"],
           " and ",
           Cell[BoxData["WriteChatOutputCell"], "InlineCode"],
           ":"
          }
         ],
         "CodeText"
        ],
        Cell[
         BoxData[
          RowBox[
           {
            RowBox[
             {
              "NotebookOpen",
              "@",
              RowBox[
               {
                "FileNameJoin",
                "@",
                RowBox[
                 {
                  "{",
                  RowBox[
                   {
                    RowBox[{"NotebookDirectory", "[", "]"}],
                    ",",
                    "\"WLEvaluatorExample.nb\""
                   }
                  ],
                  "}"
                 }
                ]
               }
              ]
             }
            ],
            ";"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[106]:="
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["Looking for feedback", "Section"],
        Cell[
         "What types of features would you like added?",
         "Item"
        ],
        Cell[
         "Do you have an idea for a specific application that you want to use chat notebooks for?",
         "Item"
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {
        Cell["GitHub", "Section"],
        Cell["https://github.com/WolframResearch/Chatbook", "Text"],
        Cell[
         CellGroupData[
          {
           Cell["Feel free to create issues", "Item"],
           Cell["Suggestions", "Subitem"],
           Cell["Bug reports", "Subitem"],
           Cell["Feature requests", "Subitem"]
          },
          Open
         ]
        ],
        Cell[
         "All notebooks in this demo can be found here as well",
         "Item"
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      CellGroupData[
       {Cell["The End", "Section"], Cell["Questions?", "Text"]},
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "",
      "SlideShowNavigationBar",
      CellTags -> "SlideShowHeader"
     ],
     Cell[
      "Can you write an abstract for this presentation? It should be 300 characters or less.",
      "ChatInput",
      CellDingbat ->
       Cell[
        BoxData[TemplateBox[{}, "ChatInputCellDingbat"]],
        Background -> None
       ],
      CellLabel -> "In[157]:="
     ],
     Cell[
      "This presentation discusses advanced usage of Wolfram Language's chat notebook interface, including creating and programming chat notebooks, using Localized Language Model (LLM) tools, event-driven handler functions, and developing custom chat notebook behavior. It provides a hands-on approach with real code examples and customization tips for using chat notebooks effectively.",
      "ChatOutput",
      CellDingbat ->
       Cell[
        BoxData[
         PaneBox[
          TemplateBox[{}, "ChatIconCodeAssistant"],
          ContentPadding -> False,
          FrameMargins -> 0,
          ImageSize -> {35, 35},
          ImageSizeAction -> "ShrinkToFit",
          Alignment -> {Center, Center}
         ]
        ],
        Background -> None
       ],
      TaggingRules -> <|
       "CellToStringData" -> "This presentation discusses advanced usage of Wolfram Language's chat notebook interface, including creating and programming chat notebooks, using Localized Language Model (LLM) tools, event-driven handler functions, and developing custom chat notebook behavior. It provides a hands-on approach with real code examples and customization tips for using chat notebooks effectively.",
       "ChatData" -> ""
      |>,
      GeneratedCell -> True,
      CellAutoOverwrite -> True
     ],
     Cell[
      "I modified it slightly to get it under 300 characters. How does this look?\n\nThis presentation discusses advanced usage of Wolfram Language's chat notebooks, including creating and programming chat notebooks, and developing new custom chat notebook behavior. It provides a hands-on approach with real code examples and tips for using chat notebook features effectively.",
      "ChatInput",
      CellDingbat ->
       Cell[
        BoxData[TemplateBox[{}, "ChatInputCellDingbat"]],
        Background -> None
       ],
      CellLabel -> "In[164]:="
     ],
     Cell[
      "The revised abstract succinctly captures the key elements of the presentation while staying within the 300-character limit. It looks great! It effectively conveys the subjects covered in the presentation, namely the advanced usage, creation, and programming of Wolfram Language's chat notebooks, as well as the development of new custom notebook behavior with practical code examples and tips.",
      "ChatOutput",
      CellDingbat ->
       Cell[
        BoxData[
         PaneBox[
          TemplateBox[{}, "ChatIconCodeAssistant"],
          ContentPadding -> False,
          FrameMargins -> 0,
          ImageSize -> {35, 35},
          ImageSizeAction -> "ShrinkToFit",
          Alignment -> {Center, Center}
         ]
        ],
        Background -> None
       ],
      TaggingRules -> <|
       "CellToStringData" -> "The revised abstract succinctly captures the key elements of the presentation while staying within the 300-character limit. It looks great! It effectively conveys the subjects covered in the presentation, namely the advanced usage, creation, and programming of Wolfram Language's chat notebooks, as well as the development of new custom notebook behavior with practical code examples and tips.",
       "ChatData" -> ""
      |>,
      GeneratedCell -> True,
      CellAutoOverwrite -> True
     ],
     Cell[
      "Good bot",
      "ChatInput",
      CellDingbat ->
       Cell[
        BoxData[TemplateBox[{}, "ChatInputCellDingbat"]],
        Background -> None
       ],
      CellLabel -> "In[165]:="
     ],
     Cell[
      "I'm glad to hear that. If you have any more questions or need further assistance, feel free to ask. Happy coding!",
      "ChatOutput",
      CellDingbat ->
       Cell[
        BoxData[
         PaneBox[
          TemplateBox[{}, "ChatIconCodeAssistant"],
          ContentPadding -> False,
          FrameMargins -> 0,
          ImageSize -> {35, 35},
          ImageSizeAction -> "ShrinkToFit",
          Alignment -> {Center, Center}
         ]
        ],
        Background -> None
       ],
      TaggingRules -> <|
       "CellToStringData" -> "I'm glad to hear that. If you have any more questions or need further assistance, feel free to ask. Happy coding!",
       "ChatData" -> ""
      |>,
      GeneratedCell -> True,
      CellAutoOverwrite -> True
     ],
     Cell[
      BoxData[
       RowBox[
        {
         RowBox[
          {
           RowBox[
            {
             "CurrentChatSettings",
             "[",
             RowBox[
              {
               RowBox[{"EvaluationNotebook", "[", "]"}],
               ",",
               "\"ChatHistoryLength\""
              }
             ],
             "]"
            }
           ],
           "=",
           "1000"
          }
         ],
         ";"
        }
       ]
      ],
      "Input",
      CellLabel -> "In[155]:="
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "StringLength",
            "[",
            "\"This presentation discusses advanced usage of Wolfram Language's chat notebooks, including creating and programming chat notebooks, and developing new custom chat notebook behavior. It provides a hands-on approach with real code examples and tips for using chat notebook features effectively.\"",
            "]"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[163]:="
        ],
        Cell[BoxData["292"], "Output", CellLabel -> "Out[163]="]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ]
 },
 ScreenStyleEnvironment -> "Slideshow Working",
 WindowToolbars -> { },
 TaggingRules -> <|
  "PresenterSettings" -> <|
   "ShowNavigationBar" -> True,
   "SlideBreakStyles" -> {"Title", "Chapter", "Section"},
   "ShowSlideBreaks" -> True,
   "Theme" -> <|
    "ThemeName" -> "Facet",
    "FontSetName" -> "Facet",
    "ColorSetName" -> "Default"
   |>,
   "WindowSize" -> {1920, 1027},
   "WindowMargins" -> -5.5
  |>,
  "TryRealOnly" -> False,
  "ChatNotebookSettings" -> <|"ChatHistoryLength" -> 1000|>
 |>,
 StyleDefinitions ->
  Notebook[
   {
    Cell[
     StyleData[
      StyleDefinitions ->
       FrontEnd`FileName[
        {"PresenterTools"},
        "Facet.nb",
        CharacterEncoding -> "UTF-8"
       ]
     ]
    ],
    Cell[
     StyleData["Notebook"],
     StyleHints -> {
      ParentList,
      "CodeFont" -> "Source Code Pro",
      "ColorSet" -> {
       "Display1" -> RGBColor[0.866667, 0.0666667, 0],
       "Display2" -> RGBColor[0.67, 0.0666667, 0],
       "Display3" -> RGBColor[0.67, 0.0666667, 0],
       "Text1" -> GrayLevel[0.1],
       "Text2" -> GrayLevel[1],
       "Text3" -> GrayLevel[0],
       "Text1Reverse" -> GrayLevel[0.75],
       "Text2Reverse" -> GrayLevel[0.75],
       "Text3Reverse" -> GrayLevel[0.75],
       "Dingbat" -> RGBColor[0.866667, 0.0666667, 0],
       "Default" -> GrayLevel[0.1],
       "Background" -> GrayLevel[1]
      },
      "FontSet" -> {
       "Display1" -> "Source Sans Pro",
       "Display2" -> "Source Sans Pro",
       "Display3" -> "Source Sans Pro",
       "Text1" -> "Source Sans Pro",
       "Text2" -> "Source Sans Pro",
       "Text3" -> "Source Sans Pro",
       "Dingbat" -> "Source Sans Pro",
       "Default" -> "Source Sans Pro"
      },
      "SlideBreakStyles" -> { }
     }
    ],
    Cell[
     StyleData["FirstSlide"],
     PrivateCellOptions -> {
      "PagewiseNotebookBaseStyle" -> {
       BackgroundAppearance ->
        FrontEnd`FileName[
         {"PresenterTools"},
         "Background-Facet-Default.png"
        ]
      }
     }
    ],
    Cell[
     StyleData["Title"],
     FontSize -> 36,
     FontWeight -> "Bold",
     FontTracking -> "Plain",
     FontVariations -> {"CapsType" -> "Normal"}
    ],
    Cell[
     CellGroupData[
      {
       Cell["Section", "Subsection"],
       Cell[
        StyleData["Section"],
        FontTracking -> "Plain",
        FontVariations -> {"CapsType" -> "Normal"}
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData["Subsection"],
           FontTracking -> "Plain",
           FontVariations -> {"CapsType" -> "Normal"}
          ],
          Cell[
           StyleData["Subsection", "Slideshow Working"],
           FontSize ->
            Dynamic[
             0.029 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]
            ]
          ],
          Cell[
           StyleData["Subsection", "Slideshow Presentation"],
           FontSize ->
            Dynamic[
             0.029 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]
            ]
          ]
         },
         Open
        ]
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData["Subsubsection"],
           FontTracking -> "Plain",
           FontVariations -> {"CapsType" -> "Normal"}
          ],
          Cell[
           StyleData["Subsubsection", "Slideshow Working"],
           FontSize ->
            Dynamic[
             0.026 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]
            ],
           FontWeight -> "DemiBold"
          ],
          Cell[
           StyleData["Subsubsection", "Slideshow Presentation"],
           FontSize ->
            Dynamic[
             0.026 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]
            ],
           FontWeight -> "DemiBold"
          ],
          Cell[
           StyleData["Subsubsubsection", "Slideshow Working"],
           FontSize ->
            Dynamic[
             0.026 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]
            ],
           FontWeight -> "DemiBold",
           FontTracking -> "Plain"
          ],
          Cell[
           StyleData["Subsubsubsection", "Slideshow Presentation"],
           FontSize ->
            Dynamic[
             0.026 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]
            ],
           FontWeight -> "DemiBold",
           FontTracking -> "Plain"
          ],
          Cell[
           StyleData["Subsubsubsubsection", "Slideshow Working"],
           FontSize ->
            Dynamic[
             0.026 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]
            ]
          ],
          Cell[
           StyleData["Subsubsubsubsection", "Slideshow Presentation"],
           FontSize ->
            Dynamic[
             0.026 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]
            ]
          ]
         },
         Open
        ]
       ],
       Cell[
        CellGroupData[
         {
          Cell[StyleData["InputOnly"], FontSize -> 13],
          Cell[
           StyleData["InputOnly", "SlideShow"],
           CellMargins -> {{100, 10}, {8, 15}}
          ],
          Cell[
           StyleData["InputOnly", "Slideshow Working"],
           CellMargins ->
            Dynamic[
             {
              {
               0.135 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}],
               0.03 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]
              },
              {
               0.00992593 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}],
               0.0186111 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]
              }
             }
            ],
           LinebreakAdjustments -> {1, 2.0, 12.0, 1.0, 1.0},
           FontSize ->
            Dynamic[
             0.019 * FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]
            ]
          ],
          Cell[
           StyleData[
            "InputOnly",
            "Slideshow Presentation",
            StyleDefinitions ->
             StyleData["InputOnly", "Slideshow Working"]
           ]
          ],
          Cell[
           StyleData[
            "InputOnly",
            "Scrolling Presentation",
            StyleDefinitions ->
             StyleData["InputOnly", "Slideshow Working"]
           ]
          ],
          Cell[
           StyleData["InputOnly", "Printout"],
           CellMargins -> {{49, Inherited}, {Inherited, Inherited}},
           LinebreakAdjustments -> {0.85, 2, 10, 1, 1}
          ]
         },
         Open
        ]
       ]
      },
      Open
     ]
    ]
   },
   Visible -> False,
   StyleDefinitions -> "PrivateStylesheetFormatting.nb"
  ]
]